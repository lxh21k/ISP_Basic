#include <string>
#include <opencv2/opencv.hpp>

class GRaw {
public:
    //以下是参考，可自己继续补充需要的成员函数，可修改函数接口和返回类型
    GRaw(){};
    ~GRaw(){};
    void read_file(const std::string& path);
    void bayer_cvt();
    void linear_scale();
    void apply_gain();
    void apply_lsc();
    void apply_demosaic();
    void apply_ccm();
    void apply_gamma();

    void write_bgr(const std::string& path);

public:
    //可自己继续补充需要的成员变量
    int width = 4160; //输入输出尺寸
    int height = 3120; //输入输出尺寸 
    float black_level_ = 63; 
    float white_level_ = 1023;
    // BayerPattern bayer_pattern_=RGGB;
    float gamma_ratio = 2.2; //参考gamma系数，与下面gamma_curve二选一使用
    int gamma_curve[257] = {0,   21,   42,   63,   83,  103,  122,  140,  159,  176,  193,
        210,  226,  242,  257,  272,  287,  301,  315,  328,  341,  353,
        366,  377,  389,  400,  411,  422,  432,  442,  451,  461,  471,
        480,  489,  498,  506,  513,  521,  527,  534,  540,  546,  552,
        558,  563,  568,  573,  578,  582,  587,  591,  595,  600,  604,
        608,  613,  617,  621,  625,  630,  635,  639,  643,  647,  651,
        655,  658,  662,  665,  669,  672,  675,  678,  681,  684,  687,
        690,  693,  695,  698,  701,  703,  706,  708,  711,  714,  716,
        719,  721,  724,  727,  729,  732,  734,  737,  739,  741,  744,
        746,  748,  750,  753,  755,  757,  759,  761,  763,  765,  767,
        769,  771,  773,  775,  777,  779,  781,  783,  785,  787,  789,
        791,  793,  795,  797,  799,  801,  803,  805,  807,  808,  810,
        812,  814,  815,  817,  819,  821,  822,  824,  826,  828,  829,
        831,  833,  834,  836,  838,  840,  841,  843,  845,  846,  848,
        850,  852,  853,  855,  857,  858,  860,  862,  864,  865,  867,
        869,  870,  872,  874,  876,  877,  879,  880,  882,  884,  886,
        887,  889,  891,  892,  894,  896,  898,  899,  901,  903,  904,
        906,  908,  909,  911,  913,  914,  916,  918,  920,  921,  923,
        925,  926,  928,  930,  931,  933,  935,  936,  938,  940,  942,
        943,  945,  947,  948,  950,  952,  954,  955,  957,  959,  960,
        962,  964,  965,  967,  969,  970,  972,  974,  976,  977,  979,
        981,  982,  984,  986,  987,  989,  991,  993,  994,  996,  998,
        999, 1001, 1003, 1004, 1006, 1008, 1009, 1011, 1013, 1015, 1016,
       1018, 1020, 1021, 1023};//项目定制化gamma曲线
    float rgb_gain[3] = {2.070834,1.000000,1.742602};
    float ccm[9] = {2.015625,-0.828125,-0.187500,-0.156250,1.546875,-0.398438,0.054688,-0.773438,1.718750}; 
    float lsc[13][17]={{7.999, 7.752, 5.771, 4.623, 3.854, 3.326, 2.921, 2.632, 2.468,
        2.442, 2.548, 2.772, 3.157, 3.649, 4.272, 5.256, 6.38 },
       {7.999, 6.055, 4.732, 3.851, 3.212, 2.713, 2.327, 2.075, 1.95 ,
        1.929, 2.015, 2.207, 2.532, 3.013, 3.587, 4.385, 5.402},
       {6.658, 5.225, 4.096, 3.313, 2.692, 2.207, 1.884, 1.692, 1.594,
        1.577, 1.637, 1.781, 2.041, 2.461, 3.06 , 3.741, 4.749},
       {5.968, 4.622, 3.653, 2.899, 2.292, 1.868, 1.603, 1.436, 1.34 ,
        1.323, 1.378, 1.509, 1.726, 2.077, 2.617, 3.324, 4.231},
       {5.402, 4.241, 3.337, 2.597, 2.033, 1.661, 1.417, 1.251, 1.162,
        1.144, 1.196, 1.325, 1.529, 1.826, 2.307, 2.996, 3.847},
       {5.106, 4.014, 3.143, 2.417, 1.887, 1.541, 1.305, 1.144, 1.061,
        1.045, 1.092, 1.21 , 1.416, 1.692, 2.126, 2.794, 3.625},
       {4.999, 3.931, 3.072, 2.348, 1.831, 1.496, 1.262, 1.104, 1.024,
        1.009, 1.057, 1.167, 1.371, 1.644, 2.061, 2.714, 3.54 },
       {5.079, 3.973, 3.113, 2.388, 1.863, 1.522, 1.288, 1.128, 1.047,
        1.035, 1.08 , 1.197, 1.395, 1.672, 2.098, 2.756, 3.58 },
       {5.345, 4.168, 3.278, 2.543, 1.989, 1.625, 1.383, 1.22 , 1.134,
        1.117, 1.167, 1.29 , 1.495, 1.778, 2.248, 2.926, 3.753},
       {5.86 , 4.523, 3.564, 2.817, 2.221, 1.81 , 1.553, 1.389, 1.297,
        1.279, 1.333, 1.457, 1.664, 1.994, 2.518, 3.213, 4.083},
       {6.394, 5.071, 3.979, 3.202, 2.597, 2.125, 1.808, 1.624, 1.53 ,
        1.51 , 1.561, 1.693, 1.941, 2.34 , 2.91 , 3.589, 4.563},
       {7.137, 5.747, 4.587, 3.729, 3.098, 2.601, 2.225, 1.987, 1.866,
        1.84 , 1.909, 2.074, 2.386, 2.851, 3.407, 4.18 , 5.153},
       {7.999, 6.944, 5.511, 4.462, 3.718, 3.214, 2.82 , 2.532, 2.369,
        2.334, 2.418, 2.626, 2.986, 3.449, 4.05 , 4.967, 5.995}};
    cv::Mat img_; //放入raw数据
    int m_ori_rotation=0;    //记录原始metadata中的角度信息, 用0,90,180,270描述
    // int width_rggb = 4160/2;
    // int height_rggb = 3120/2; 

};
